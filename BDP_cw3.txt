4. 
create table budynki(id_budynku serial primary key, geometria geometry, nazwa varchar);
create table drogi(id_drogi serial primary key, geometria geometry, nazwa varchar);
create table punkty_informacyjne(id_pkt serial primary key, geometria geometry, nazwa varchar);

5.
insert into budynki (geometria, nazwa) 
values ('POLYGON((10.5 4, 10.5 1.5, 8 1.5, 8 4, 10.5 4))', 'BuildingA'),
       ('POLYGON((6 7, 6 5, 4 5, 4 7, 6 7))', 'BuildingB'),
       ('POLYGON((5 8, 5 6, 3 6, 3 8, 5 8))', 'BuildingC'),
       ('POLYGON((10 9, 10 8, 9 8, 9 9, 10 9))', 'BuildingD'),
       ('POLYGON((2 2, 2 1, 1 1, 1 2, 2 2))', 'BuildingF');
       
insert into drogi (geometria, nazwa) 
values ('LINESTRING(0 4.5, 12 4.5)', 'RoadX'),
       ('LINESTRING(7.5 0, 7.5 10.5)', 'RoadY');

insert into punkty_informacyjne (geometria, nazwa) 
values ('POINT(1 3.5)', 'G'),
       ('POINT(5.5 1.5)', 'H'),
       ('POINT(9.5 6)', 'I'),
       ('POINT(6.5 6)', 'J'),
       ('POINT(6 9.5)', 'K');
       

6.
a) select sum(ST_LENGTH(geometria)) from drogi;
b) select ST_AsEWKT(geometria) as geometria, ST_Area(geometria) as pole, ST_Perimeter(geometria)as obwod from budynki where nazwa='BuildingA';
c) select nazwa, ST_Area(geometria) as pole from budynki order by nazwa asc;
d) select nazwa, ST_Perimeter(geometria) from budynki order by ST_Area(geometria) desc limit 2;
e) select ST_Distance(budynki.geometria, punkty_informacyjne.geometria) from budynki, punkty_informacyjne where budynki.nazwa like 'BuildingC' and punkty_informacyjne.nazwa like 'G';

f) select ST_Area(ST_Intersection(ST_Buffer((select geometria from budynki where nazwa like 'BuildingB'), 0.5), (select geometria from budynki where nazwa like 'BuildingC')));

g) select id_budynku, nazwa from budynki where ST_Y(ST_Centroid(geometria)) > ST_Y(ST_PointN((select geometria from drogi where nazwa like 'RoadX') 1));
 select ST_Area(ST_SymDifference((select geometria from budynki where nazwa like 'BuildingC'), ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')));
